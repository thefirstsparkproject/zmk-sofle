#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&soft_off { hold-time-ms = <2000>; };

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    period: period {
        compatible = "zmk,behavior-tap-dance";
        label = "PERIOD";
        #binding-cells = <0>;
        bindings = <&kp DOT>, <&kp COLON>;
    };

    period_plus: period_plus {
        compatible = "zmk,behavior-tap-dance";
        label = "PERIOD_PLUS";
        #binding-cells = <0>;
        bindings = <&kp EXCL>, <&kp QMARK>;
    };

    comma: comma {
        compatible = "zmk,behavior-tap-dance";
        label = "COMMA";
        #binding-cells = <0>;
        bindings = <&kp COMMA>, <&kp SEMI>;
    };

    quote: quote {
        compatible = "zmk,behavior-tap-dance";
        label = "QUOTE";
        #binding-cells = <0>;
        bindings = <&kp SQT>, <&kp DQT>, <&kp GRAVE>;
    };

    division: division {
        compatible = "zmk,behavior-tap-dance";
        label = "DIVISION";
        #binding-cells = <0>;
        bindings = <&kp SLASH>, <&kp PERCENT>;
    };

    group_begin: group_begin {
        compatible = "zmk,behavior-tap-dance";
        label = "GROUP_BEGIN";
        #binding-cells = <0>;
        bindings = <&kp LPAR>, <&kp LBKT>, <&kp LBRC>;
    };

    group_end: group_end {
        compatible = "zmk,behavior-tap-dance";
        label = "GROUP_END";
        #binding-cells = <0>;
        bindings = <&kp RPAR>, <&kp RBKT>, <&kp RBRC>;
    };

    tap_hold: tap_hold {
        compatible = "zmk,behavior-hold-tap";
        label = "TAP_HOLD";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
    };

    encoder_page: encoder_page {
        compatible = "zmk,behavior-sensor-rotate";
        label = "ENCODER_PAGE";
        #sensor-binding-cells = <0>;
        bindings = <&kp PAGE_DOWN>, <&kp PAGE_UP>;
    };

    bt_nav: bt_nav {
        compatible = "zmk,behavior-sensor-rotate";
        label = "BT_NAV";
        #sensor-binding-cells = <0>;
        bindings = <&bt BT_NXT>, <&bt BT_NXT>;
    };

    mouse_mode: mouse_mode {
        compatible = "zmk,behavior-tap-dance";
        label = "MOUSE_MODE";
        #binding-cells = <0>;
        bindings = <&kp M>, <&to 3>;
    };

    keyboard_mode: keyboard_mode {
        compatible = "zmk,behavior-tap-dance";
        label = "KEYBOARD_MODE";
        #binding-cells = <0>;
        bindings = <&kp V>, <&to 4>;
    };

    hardware_mode: hardware_mode {
        compatible = "zmk,behavior-tap-dance";
        label = "HARDWARE_MODE";
        #binding-cells = <0>;
        bindings = <&kp H>, <&to 2>;
    };

    q_escape: q_escape {
        compatible = "zmk,behavior-tap-dance";
        label = "Q_ESCAPE";
        #binding-cells = <0>;
        bindings = <&kp Q>, <&kp ESCAPE>;
    };

    e_enter: e_enter {
        compatible = "zmk,behavior-tap-dance";
        label = "E_ENTER";
        #binding-cells = <0>;
        bindings = <&kp E>, <&kp ENTER>;
    };

    behaviors {
    };

    combos {
        compatible = "zmk,combos";

        softoff {
            bindings = <&soft_off>;
            key-positions = <14 28 40>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <22 23>;
        };

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <15 14>;
        };
    };

    macros {
        compose_accent: compose_accent {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt CAPS &sl 6>;
            label = "COMPOSE_ACCENT";
        };

        nav_pan: lclk_ctrl {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT &mkp MCLK>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mkp MCLK &kp LSHFT>;

            label = "LCLK_CTRL";
        };

        nav_zoom: nav_zoom {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &mkp MCLK>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mkp MCLK &kp LCTRL>;

            label = "NAV_ZOOM";
        };

        ml_shift: ml_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT &mkp LCLK>,
                <&macro_release>,
                <&mkp LCLK &kp LSHFT>;

            label = "ML_SHIFT";
        };

        ml_ctrl: ml_ctrl {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &mkp LCLK>,
                <&macro_release>,
                <&mkp LCLK &kp LCTRL>;

            label = "ML_CTRL";
        };

        ml_alt: ml_alt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT &mkp LCLK>,
                <&macro_release>,
                <&mkp LCLK &kp LCTRL>;

            label = "ML_ALT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
&none       &kp N1                &kp N2                &kp N3             &kp N4              &kp N5    &mmv MOVE_UP     &kp N6          &kp N7             &kp N8             &kp N9            &kp N0                     &none
&trans      &q_escape             &kp W                 &e_enter           &kp R               &kp T     &mmv MOVE_DOWN   &kp Y           &kp U              &kp I              &kp O             &kp P                      &none
&kp HOME    &tap_hold LEFT_WIN A  &tap_hold LEFT_ALT S  &tap_hold LCTRL D  &tap_hold LSHIFT F  &kp G     &mmv MOVE_LEFT   &hardware_mode  &tap_hold RSHFT J  &tap_hold RCTRL K  &tap_hold RALT L  &tap_hold RWIN UNDERSCORE  &kp END
&none       &kp Z                 &kp X                 &kp C              &keyboard_mode      &kp B     &mmv MOVE_RIGHT  &kp N           &mouse_mode        &kp SPACE          &kp BACKSPACE     &kp TAB                    &none
&kp C_MUTE  &trans                &trans                &mo 5              &mo 1               &to 0     &mkp LCLK        &trans          &trans             &compose_accent    &trans            &trans
            >;

            sensor-bindings = <&encoder_page>;
            display-name = "base_layer";
        };

        symbols {
            bindings = <
&trans     &trans                   &trans                   &trans              &trans              &trans          &trans  &trans      &trans               &trans              &trans             &trans             &trans
&trans     &kp TILDE                &kp AT                   &kp HASH            &kp AMPERSAND       &group_begin    &trans  &group_end  &kp PIPE             &kp BSLH            &period_plus       &trans             &trans
&kp CARET  &tap_hold LWIN NUMBER_1  &tap_hold LALT NUMBER_2  &tap_hold LCTRL N3  &tap_hold LSHFT N4  &kp N5          &trans  &kp N6      &tap_hold RSHIFT N7  &tap_hold RCTRL N8  &tap_hold RALT N9  &tap_hold RWIN N0  &kp LS(DOLLAR)
&trans     &kp LESS_THAN            &division                &kp STAR            &kp MINUS           &kp PLUS        &trans  &kp EQUAL   &quote               &comma              &period            &kp GREATER_THAN   &trans
&trans     &trans                   &trans                   &trans              &trans              &trans          &trans  &trans      &trans               &trans              &trans             &trans
            >;

            sensor-bindings = <&encoder_page>;
            display-name = "symbols";
        };

        hardware {
            bindings = <
&bootloader  &soft_off     &sys_reset    &none         &bt BT_CLR    &bt BT_CLR_ALL    &none  &none  &none            &none  &sys_reset  &soft_off  &bootloader
&none        &none         &none         &none         &none         &none             &none  &none  &none            &none  &none       &none      &none
&none        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &none  &none  &rgb_ug RGB_TOG  &none  &none       &none      &none
&none        &none         &none         &none         &none         &none             &none  &none  &none            &none  &none       &none      &none
&none        &none         &none         &none         &none         &trans            &none  &none  &none            &none  &none       &none
            >;

            sensor-bindings = <&bt_nav>;
            display-name = "hardware";
        };

        mouse {
            bindings = <
&none   &none  &none           &none           &none            &none     &trans  &none    &none      &none      &none      &none  &none
&none   &none  &none           &mmv MOVE_UP    &none            &none     &trans  &none    &ml_ctrl   &nav_zoom  &none      &none  &none
&none   &none  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none     &trans  &ml_alt  &mkp LCLK  &mkp MCLK  &mkp RCLK  &none  &none
&none   &none  &none           &none           &none            &none     &trans  &none    &ml_shift  &nav_pan   &none      &none  &none
&trans  &none  &none           &none           &none            &trans    &trans  &none    &none      &none      &none      &none
            >;

            sensor-bindings = <&scroll_encoder>;
            display-name = "mouse";
        };

        keyboard {
            bindings = <
&none     &none   &none   &none   &none   &none     &none  &none           &none     &none       &none      &none            &none
&none     &none   &none   &none   &none   &none     &none  &none           &none     &kp INSERT  &none      &kp PRINTSCREEN  &none
&kp HOME  &trans  &trans  &trans  &trans  &none     &none  &kp LEFT_ARROW  &kp DOWN  &kp UP      &kp RIGHT  &none            &kp END
&none     &none   &none   &none   &none   &none     &none  &none           &none     &none       &none      &none            &none
&none     &none   &none   &none   &none   &trans    &none  &none           &none     &none       &none      &none
            >;

            sensor-bindings = <&encoder_page>;
            display-name = "keyboard";
        };

        fn {
            bindings = <
&none  &none   &none   &none   &none   &none    &none  &none  &none   &none    &none    &none    &none
&none  &none   &none   &none   &none   &none    &none  &none  &kp F1  &kp F2   &kp F3   &kp F4   &none
&none  &trans  &trans  &trans  &trans  &none    &none  &none  &kp F5  &kp F6   &kp F7   &kp F8   &none
&none  &none   &none   &none   &none   &none    &none  &none  &kp F9  &kp F10  &kp F11  &kp F12  &none
&none  &none   &none   &none   &none   &none    &none  &none  &none   &none    &none    &none
            >;
        };

        accent {
            bindings = <
&none  &none        &none          &none      &none     &none    &none  &none  &none  &none  &none  &none  &none
&none  &none        &none          &none      &none     &none    &none  &none  &none  &none  &none  &none  &none
&none  &kp LS(DQT)  &kp LS(CARET)  &kp GRAVE  &kp APOS  &none    &none  &none  &none  &none  &none  &none  &none
&none  &none        &none          &none      &none     &none    &none  &none  &none  &none  &none  &none  &none
&none  &none        &none          &none      &none     &none    &none  &none  &none  &none  &none  &none
            >;
        };
    };
};
